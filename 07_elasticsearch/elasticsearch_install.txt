
注意: elasticsearch是不能在root用户下安装的,需要新建用户(root权限过大,容易产生安全问题)
创建 admin 用户组
groupadd admin
创建使用admin用户组(-g 后面跟对应用户组)的用户 admin(第二个admin代表用户), -m (自动建立用户的登入目录)
useradd -g admin admin -m

chmod +w /etc/sudoers
vim /etc/sudoers
在文件最后添加如下内容：
# add privilege for admin

admin ALL=(ALL) ALL

# end


环境准备,否则启动会存在问题
vi /etc/security/limits.conf  添加用户级别句柄和进程

#
# begin
#

*   soft noproc   65535
*   hard noproc   65535
*   soft nofile   1000000
*   hard nofile   1000000

# 说明: * 代表针对所有用户
# noproc 是代表最大进程数
# nofile 是代表最大文件打开数

# soft nproc : 单个用户可用的最大进程数量(超过会警告);
# hard nproc : 单个用户可用的最大进程数量(超过会报错);
# soft nofile : 可打开的文件描述符的最大数(超过会警告);
# hard nofile : 可打开的文件描述符的最大数(超过会报错);
# 一般soft的值会比hard小,也可相等.

#
# end
#


#vim /etc/sysctl.conf
fs.file-max=99999
#保存后，执行sysctl -p 或者重启服务器生效


vi /etc/profile
# 添加这行
ulimit -u 10000 

使修改免重启并生效
source /etc/profile

vi /etc/sysctl.conf
root用户,或sudo修改测试环境确保linux单个进程的最大线程数为655360
在/etc/sysctl.conf文件最后添加,测试环境修改该值为655360(根据机器的性能调整,生产环境可以使用默认值999999)
# change max memory that user can used
vm.max_map_count=655360

使内核配置生效
sudo sysctl -p
查看限制是否变更
sudo sysctl -a|grep vm.max_map_count


reboot 生效(部分直接source不能生效的配置)
查看限制是否变更(open files 是否为 1000000)
ulimit -a


# 在admin用户下执行(单机版和集群版仅配置上存在区别,每台服务器同样方式安装)
su - admin
tar -zxvf /home/admin/softwares/elasticsearch-5.0.2.tar.gz -C /home/admin/mw/
mkdir /home/admin/mw/elasticsearch-5.0.2/{data,logs}
cd /home/admin/mw/elasticsearch-5.0.2

2.6.3.	修改配置(使用cat直接覆盖需要注意对应版本,不同版本配置可能不同!!!)
cat > /home/admin/mw/elasticsearch-5.0.2/config/elasticsearch.yml <<'EOF'

# cluster name
cluster.name: atreusCluster

# cluster unique settings begin
# Name of this node (unique for different nodes) 
node.name: node-1
# Cluster node IP
discovery.zen.ping.unicast.hosts: ["10.57.17.184"]
# More nodes are separated by commas
#discovery.zen.ping.unicast.hosts: ["10.30.12.2","10.30.12.3","10.30.12.4"]
# 一个节点需要看到的具有master节点资格的最小数量,然后才能在集群中做操作.
# 官方的推荐值是(N/2)+1,其中N是具有master资格的节点(node.master: true)的数量
#(3台集群可以配置3(计算为2)避免脑裂,当设置为1时,主节点宕机重启后,依然会选举自己为主节点,若设置为1,
# 则一个主节点(自己)认可后就能成为集群主节点,那么当前主节点则会独立成为一个单节点集群(因为一个集群仅能有一个主节点))
discovery.zen.minimum_master_nodes: 1
# 集群数量少默认true即可,即三台服务器搭建时,三台均可设置为true,均可在主节点宕机后自己被选择为主节点,这时建议discovery.zen.minimum_master_nodes: 2 
node.master: true
node.data: true
# cluster unique settings end


# Current node IP
network.host: 10.57.17.184
# Current node PORT
http.port: 9200
# 如果启用了 HTTP 端口,那么此属性会指定是否允许跨源 REST 请求.
http.cors.enabled: true
# 如果 http.cors.enabled 的值为 true,那么该属性会指定允许 REST 请求来自何处.
http.cors.allow-origin: "*"
# 数据存储路径(目录需要提前创建)
path.data: /home/admin/mw/elasticsearch-5.0.2/data
# 日志存储路径(目录需要提前创建)
path.logs: /home/admin/mw/elasticsearch-5.0.2/logs
## # 以下配置可以减少当es节点短时间宕机或重启时shards重新分布带来的磁盘io读写浪费
##discovery.zen.fd.ping_timeout: 180s
##discovery.zen.fd.ping_retries: 8
##discovery.zen.fd.ping_interval: 30s
##discovery.zen.ping_timeout: 120s
##

EOF

查看配置是否正确
vim /home/admin/mw/elasticsearch-5.0.2/config/elasticsearch.yml

配置es内存
vi /home/admin/mw/elasticsearch-5.0.2/config/jvm.options
根据机器实际内存大小修改
-Xms2g
-Xmx2g

测试可以配置为
-Xms384m
-Xmx384m


2.6.4.	启动服务
cd /home/admin/mw/elasticsearch-5.0.2/bin
./elasticsearch -d
或
/home/admin/mw/elasticsearch-5.0.2/bin/elasticsearch -d 
查看日志
less /home/admin/mw/elasticsearch-5.0.2/logs/atreusCluster.log
看到
[2019-10-13T15:59:35,694][INFO ][o.e.n.Node               ] [node-1] started
[2019-10-13T15:59:35,705][INFO ][o.e.g.GatewayService     ] [node-1] recovered [0] indices into cluster_state
说明启动成功

查看
jps 
看是否存在Elasticsearch应用

停止
获取pid
jps|grep Elasticsearch|awk '{print $1}'
kill进程
jps|grep Elasticsearch|awk '{print $1}'|xargs kill -9

慎用!!! 删除所有索引
curl -XDELETE http://10.30.10.1:9200/_all



2.6.5.	开放防火墙
查看防火墙状态
systemctl status firewalld
临时关闭防火墙
systemctl stop firewalld

浏览器访问http://IP:9200/_cat/nodes?pretty
单机显示如下信息表示集群成功：
10.57.17.184 9 99 2 0.06 0.32 0.62 mdi * node-1
集群显示如下信息表示集群成功：
10.57.17.184 44 94 2 0.05 0.09 0.11 mdi * node-1
10.57.17.185 22 73 1 0.08 0.06 0.05 mdi - node-2
10.57.17.186 57 66 2 0.03 0.04 0.05 mdi - node-3

例:
windows访问
http://10.57.17.184:9200/_cat/nodes?pretty  
linux执行 
curl http://10.57.17.184:9200/_cat/health?v    



常见问题记录及解决方法
启动报错：
[node-1] node validation exception bootstrap checks failed
max file descriptors [65535] for elasticsearch process is too low, increase to a
t least [65536]
解决：看文档最前面的环境准备


准备初始化存储片区
如果需要重新建,删除所有索引
curl -XDELETE http://10.30.10.1:9200/_all

脚本新建索引(atreus, holmes, freyr如果开启es统计,那么就需要建立对应索引)
vim es_init_atreus_script52.py
修改es_init_atreus_script52.py中的开始时间start和结束时间end,开始时间填写要比你想要的时间大一天.
修改es_init_atreus_script52.py中的ipAddress为elasticsearch的ip,集群随便写哪一个都可以(单机就写本机ip).
例:(三台es集群,索引7天一个,建两年,106个可以保持集群状态在green)
start = "20190601"
end = "20210531"
ipAddress = "10.57.17.184:9200"



同盾特殊操作:
执行py脚本(注意:如果有elasticsearch-init.sh先删除!!! rm -f elasticsearch-init.sh )
python es_init_atreus_script52.py
查看是否多了个elasticsearch-init.sh文件
ll

如没执行权限请添加执行权限:
chmod +x elasticsearch-init.sh

在执行生成elasticsearch脚本：
./elasticsearch-init.sh

验证步奏：
查看脚本执行的结果都为{"acknowledged":true}


atreus查看(根据token)
{"query":{"bool":{"filter":[{"bool":{"must":[{"term":{"token.raw":"token419452974738445290-1583164800000"}}]}}]}},"aggs":{}}


1、安装nodes 
http://nodejs.cn/download/
2、安装elasticdump：https://www.npmjs.com/package/elasticdump 
命令：npm i elasticdump -g
3、elasticdump --input=http://10.0.18.107:8088/elastic/atreus-*/entryinvokeresult --output=export_entry_2019082.json --type=data --sourceOnly=true


elasticsearch保存dump
tar -xvf   node-v12.14.1-linux-x64.tar.xz   
mv node-v12.14.1-linux-x64  nodejs 
ln -s /app/software/nodejs/bin/npm /usr/local/bin/ 
ln -s /app/software/nodejs/bin/node /usr/local/bin/

npm install elasticdump -g

查找安装的dump命令
find / -name elasticdump
测试环境:
/app/software/nodejs/bin/

生产环境:
/root/npm-cache/node_modules/elasticdump/bin


类型为 "_type": "entryinvokeresult" 

./elasticdump  --input=http://10.30.10.1:9200/atreus-20200108 --output=/home/tongdun/demo.json
atreus-*表示以atreus开头的索引;entryinvokeresult表示_type的值(数据类型)
./elasticdump  --input=http://10.30.10.1:9200/atreus-*/entryinvokeresult --output=/home/tongdun/esResult.json
./elasticdump  --input=http://10.30.12.2:9200/atreus-*/entryinvokeresult --output=/home/tongdun/esResult.json

江铃绝对路径:
/root/npm-cache/node_modules/elasticdump/bin/elasticdump  --input=http://10.30.12.2:9200/atreus-*/entryinvokeresult --output=/home/tongdun/esResult.json







